# Configuration Nginx pour StructureOne
# Ce fichier doit être inclus dans votre configuration de site Nginx

server {
    listen 80;
    server_name yourdomain.com www.yourdomain.com;
    root /chemin/vers/votre/projet/public;
    index index.php index.html index.htm;

    # Encodage par défaut
    charset utf-8;

    # Journalisation
    access_log /var/log/nginx/yourdomain.com-access.log;
    error_log /var/log/nginx/yourdomain.com-error.log;

    # Désactiver l'accès aux fichiers cachés
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Protéger les fichiers sensibles
    location ~* \.(env|log|json|lock|md|gitignore|gitattributes|editorconfig|example|dist|config|ini|sql|sh|bat|cmd|ps1|psm1|psd1|yaml|yml|phar)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Protéger les dossiers sensibles
    location ~* ^/(\.git|vendor|node_modules|storage|bootstrap/cache|config|database|resources/views|routes|tests|storage/logs) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Désactiver le listage des répertoires
    autoindex off;

    # En-têtes de sécurité
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    
    # HSTS - À décommenter en production avec HTTPS
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # CSP - À personnaliser selon vos besoins
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; img-src 'self' data: https:; style-src 'self' 'unsafe-inline' https:; font-src 'self' data: https:;" always;

    # Gestion des erreurs
    error_page 404 /index.php;
    error_page 403 /errors/403.html;
    error_page 500 502 503 504 /errors/50x.html;

    # Configuration pour PHP-FPM
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php/php8.1-fpm.sock; # Ajustez la version de PHP si nécessaire
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        
        # Désactiver l'accès aux fichiers .env
        location ~ \.env$ {
            deny all;
            return 403;
        }
        
        # Protéger contre les attaques par injection
        fastcgi_param HTTP_PROXY "";
        fastcgi_param PHP_VALUE "expose_php=off";
    }

    # Gestion des fichiers statiques avec mise en cache
    location ~* \.(jpg|jpeg|gif|png|css|js|ico|webp|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, no-transform";
        access_log off;
        log_not_found off;
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Redirection vers le front controller si le fichier n'existe pas
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Désactiver l'accès aux dossiers sensibles
    location ~* ^/(\.git|vendor|node_modules|storage|bootstrap/cache|config|database|resources/views|routes|tests|storage/logs) {
        deny all;
        access_log off;
        log_not_found off;
        return 403;
    }

    # Désactiver l'accès aux fichiers de configuration
    location ~* \.(env|log|json|lock|md|gitignore|gitattributes|editorconfig|example|dist|config|ini|sql|sh|bat|cmd|ps1|psm1|psd1|yaml|yml|phar)$ {
        deny all;
        access_log off;
        log_not_found off;
        return 403;
    }

    # Désactiver l'accès aux fichiers .htaccess et .user.ini
    location ~ /\.(?!well-known).* {
        deny all;
        access_log off;
        log_not_found off;
        return 403;
    }

    # Désactiver l'accès aux dossiers sans index
    location ~* ^/(?:app|bootstrap|config|database|resources|routes|storage|tests|vendor)/ {
        deny all;
        access_log off;
        log_not_found off;
        return 403;
    }

    # Protéger contre les attaques par injection de chemins
    if ($query_string ~* "(<|%3C).*script.*(>|%3E)") {
        return 403;
    }

    if ($query_string ~* "GLOBALS(=|\[|\%[0-9A-Z]{0,2})") {
        return 403;
    }

    if ($query_string ~* "_REQUEST(=|\[|\%[0-9A-Z]{0,2})") {
        return 403;
    }

    # Désactiver l'affichage des informations du serveur
    server_tokens off;
}

# Configuration pour HTTPS - À décommenter et configurer en production
# server {
#     listen 443 ssl http2;
#     server_name yourdomain.com www.yourdomain.com;
#     
#     ssl_certificate /chemin/vers/votre/certificat.crt;
#     ssl_certificate_key /chebin/vers/votre/cle_privee.key;
#     
#     # Paramètres SSL recommandés
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 1d;
#     ssl_session_tickets off;
#     
#     # HSTS - À activer avec précaution
#     add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
#     
#     # OCSP Stapling
#     ssl_stapling on;
#     ssl_stapling_verify on;
#     resolver 8.8.8.8 8.8.4.4 valid=300s;
#     resolver_timeout 5s;
#     
#     # Le reste de la configuration est identique au bloc server ci-dessus
#     # ...
#     
#     # Redirection HTTP vers HTTPS
#     if ($scheme != "https") {
#         return 301 https://$host$request_uri;
#     }
# }
